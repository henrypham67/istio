apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: opentelemetry
spec:
  mode: deployment
  image: otel/opentelemetry-collector-contrib:latest
  ports:
    - name: otlp-grpc
      port: 4317
    - name: otlp-http
      port: 4318
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      prometheus:
        config:
          scrape_configs:
            - job_name: "kubernetes"
              kubernetes_sd_configs:
                - role: pod
      filelog:
        include: ["/var/log/**/*.log"]
    processors:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 75
        spike_limit_percentage: 15
      batch:
        send_batch_size: 10000
        timeout: 10s
      attributes:
        actions:
          - key: "environment"
            value: "development"
            action: insert
          - key: "from"
            value: "open-telemetry"
            action: insert
    exporters:
      loki:
        endpoint: http://loki.logging.svc.cluster.local:3100/loki/api/v1/push
      otlphttp/tempo:
        endpoint: http://tempo.monitoring.svc.cluster.local:4318
      otlphttp/metrics:
        endpoint: http://mimir-nginx.monitoring.svc.cluster.local/otlp
        tls:
          insecure: true
      debug: {}

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlphttp/tempo, debug]
        logs:
          receivers: [otlp, filelog]
          processors: [batch]
          exporters: [loki, debug]
